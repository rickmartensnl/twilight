searchState.loadedDescShard("twilight_model", 0, "twilight-model\nGroup of <code>Channel</code>s and <code>User</code>s with additional moderation …\nModels used when sending data to Discord.\nID with type-safe markers for each resource.\nUtilities for efficiently parsing and representing data …\nVoice connection and gateway definitions.\nUsed for building commands to send to Discord.\nUsed when receiving interactions through gateway or …\nSlash command.\nData sent to Discord to create a command.\nOption for a <code>Command</code>.\nA predetermined choice users can select.\nValue of a <code>CommandOptionChoice</code>.\nType of a <code>CommandOption</code>.\nType used in the <code>max_value</code> and <code>min_value</code> <code>CommandOption</code> …\nInteger choice.\nInteger type.\nUI-based command.\nNumber choice.\nNumber type.\nString choice. Must be 100 characters or less.\nVariant value is unknown to the library.\nUI-based command.\nWhether the command supports autocomplete.\nList of possible channel types users can select from.\nList of predetermined choices users can select from.\nDefault permissions required for a member to run the …\nDescription of the option. Must be 100 characters or less.\nDescription of the command.\nLocalization dictionary for the <code>description</code> field.\nLocalization dictionary for the <code>description</code> field.\nWhether the command is available in DMs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild ID of the command, if not global.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of option.\nMaximum allowed value length.\nMaximum allowed value.\nMinimum allowed value length.\nMinimum allowed value.\nName of the option. Must be 32 characters or less.\nName of the choice. Must be 100 characters or less.\nLocalization dictionary for the <code>name</code> field.\nLocalization dictionary for the <code>name</code> field.\nLocalization dictionary for the <code>name</code> field.\nWhether the command is age-restricted.\nNested options.\nLimit who and where commands can be executed.\nWhether the option is required.\nValue of the choice.\nAutoincrementing version identifier.\nAffected channel.\nMember, channel or role explicit permission to use a …\nResources commands can allow or disallow from executing …\nList of <code>CommandPermission</code>s for a command in a guild.\nAffected role.\nAffected member.\nID of the application the command belongs to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild.\nID of the command.\nAffected resource.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the resource is allowed or disallowed to use the …\nCommand permissions in the guild.\nInteraction involves an application command.\nData received for the <code>ApplicationCommand</code> and …\nInteraction involves an autocomplete request.\nPayload received when a user executes an interaction.\nPartial channel resolved from an <code>Interaction</code>.\nAdditional <code>Interaction</code> data, such as the invoking user.\nResolved mentioned resources.\nPartial member resolved from an <code>Interaction</code>.\nType of interaction.\nInteraction involves a message <code>Component</code>.\nData received for the <code>MessageComponent</code> interaction type.\nInteraction involves a modal submit.\nData received for the <code>ModalSubmit</code> interaction type.\nInteraction involves a ping (webhook-based interactions).\nApp’s permissions in the channel the interaction was …\n<code>ApplicationCommand</code> interaction.\nID of the associated application.\nMap of resolved attachments.\nThe user that invoked the interaction.\nID of the user that invoked the interaction.\nMember’s guild avatar.\nThe channel the interaction was invoked in.\nID of the channel the interaction was invoked in.\nMap of resolved channels.\nIf the member is timed out, when the timeout will expire.\nData from the interaction.\nFor monetized apps, any entitlements for the invoking …\nFlags for the member.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild the interaction was invoked in.\nGuild’s preferred locale.\nID of the channel.\nID of the interaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the interaction was invoked in a DM.\nWhether the interaction was invoked in a guild.\nMember guild join date.\nType of the channel.\nType of interaction.\nSelected language of the user who invoked the interaction.\nMember that invoked the interaction.\nMap of resolved members.\nMessage attached to the interaction.\n<code>MessageComponent</code> interaction.\nMap of resolved messages.\n<code>ModalSubmit</code> interaction.\nName of the channel.\nMember nickname.\nID of the channel the thread was created in.\nWhether the user has yet to pass the guild’s Membership …\nComputed permissions, including overwrites, for the …\nTotal permissions of the member in this channel including …\nMap of resolved roles.\nMember roles.\nMetadata about a thread.\nToken for responding to the interaction.\nUser that invoked the interaction.\nMap of resolved users.\nAttachment option.\nBoolean option.\nChannel option.\nData received when an <code>ApplicationCommand</code> or …\nData received when a user fills in a command option.\nCombined value and value type for a <code>CommandDataOption</code>.\nFocused option.\nInteger option.\nMentionable option.\nNumber option.\nRole option.\nString option.\nSubcommand option.\nSubcommand group option.\nUser option.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild the command is registered to.\nID of the command.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of the command.\nName of the option.\nName of the command.\nList of options specified by the user.\nResolved data from the interaction’s options.\nIf this is a user or message command, the ID of the …\nValue of the option.\nData received when a <code>MessageComponent</code> interaction is …\nType of the component.\nUser defined identifier for the component.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverted users, roles, channels, or attachments.\nValues selected by the user.\nData received when an <code>ModalSubmit</code> interaction is executed.\nUser filled in <code>ActionRow</code>.\nUser filled in modal component.\nList of user inputs.\nList of components.\nUser defined identifier for the modal.\nUser defined identifier for the component.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of the component.\nValue submitted by the user.\nEntitlements in Discord represent that a user or guild has …\nID of the parent application.\nNot applicable for App Subscriptions. Subscriptions are …\nEntitlement was deleted.\nDate at which the entitlement is no longer valid. Not …\nReturns the argument unchanged.\nID of the guild that is granted access to the entitlement…\nID of the entitlement.\nCalls <code>U::from(self)</code>.\nType of entitlement.\nID of the SKU.\nStart date at which the entitlement is valid. Not present …\nID of the user that is granted access to the entitlement’…\nEntitlement was purchased as an app subscription.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSKUs (stock-keeping units) in Discord represent premium …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSKU is available for purchase.\nA subscription purchased by a user and applied to a single …\nA subscription purchased by a user for themselves. They …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDiscord chooses the quality for optimal performance.\nChannel to send messages in, call with other users, …\nAn object indicating that following a news channel was …\n720p.\nChannel in a hub containing the listed servers.\nChannel that can only contain threads.\nChannel the can only contain threads with media content.\nThis attachment has been edited using the remix feature on …\nChannel is pinned in a forum.\nNew threads in a forum channel require a tag.\nVariant value is unknown to the library.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nID of the application that created the channel.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBitrate (in bits) setting of audio channels.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nAttachment’s media type.\nDefault duration without messages before the channel’s …\nDefault forum layout view used to display posts in forum …\nDefault sort order used to display posts in forum channels.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nDuration of the audio file (currently for voice messages).\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nWhether this attachment is ephemeral.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFlags of the channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nID of the guild the channel is in.\nHash of the channel’s icon.\nID of the channel.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether users can be invited.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether the channel type is that of a guild.\nWhether the channel type is a thread.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nType of the channel.\nFor text channels, this is the ID of the last message sent …\nID of the last message pinned in the channel.\nWhether the channel is managed by an application via the …\nMember that created the channel.\nNumber of members in the channel.\nTextual user communication method.\nNumber of messages in the channel.\nName of the variant as a string slice.\nName of the channel.\nWhether a thread was newly created.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether the channel has been configured to be NSFW.\nID of the creator of the channel.\nID of the parent channel.\nExplicit permission overwrites for members and roles.\nSorting position of the channel.\nAmount of seconds a user has to wait before sending …\nRecipients of the channel.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nID of the voice region for the channel.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nMetadata about a thread.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTopic of the channel.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nNumber of users that may be in the channel.\nCamera video quality mode of the channel.\nBase64 encoded bytearray representing a sampled waveform …\nSort forum posts by creation time (from most recent to …\nEmoji to use as the default way to react to a forum post.\nLayout of a channel that is a forum.\nLayout of a channel that is a forum.\nTag that is able to be applied to a thread in a <code>GuildForum</code> …\nDisplay posts as a collection of tiles.\nSort forum posts by activity.\nDisplay posts as a list.\nNo default has been set for the forum channel.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nID of custom guild emoji.\nID of custom guild emoji.\nUnicode emoji character.\nUnicode emoji character.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the tag.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the tag can only be added or removed by <code>Member</code>s …\nName of the tag (0–20 characters).\nAllowed mentions (pings).\nMessage is an auto moderation action.\nA super reaction.\nHas been published to subscribed channels via Channel …\nSystem message denoting a call state, e.g. missed, started.\nSystem message denoting a channel has been followed.\nSystem message denoting a channel’s icon has been …\nSystem message denoting a message has been pinned.\nSystem message denoting a channel’s name has been …\nMessage is a chat input command.\nCustom <code>Emoji</code>.\nWhen used, only shows a message to the invoking user.\nType of emoji in a <code>Reaction</code>.\n<code>@everyone</code> and <code>@here</code> mentions.\nThis message failed to mention some roles in a thread, …\nSystem message denoting a guild application premium …\nSystem message denoting a user nitro boosted a guild.\nSystem message denoting a user nitro boosted a guild to …\nSystem message denoting a user nitro boosted a guild to …\nSystem message denoting a user nitro boosted a guild to …\nSystem message denoting a guild has been disqualified for …\nSystem message denoting a final warning for Server …\nSystem message denoting an initial warning for Server …\nSystem message denoting a guild has been redisqualified …\nSystem message denoting a guild auto moderation incident …\nSystem message denoting a guild auto moderation incident …\nSystem message denoting a guild raid incident report.\nSystem message denoting a false positive guild raid …\nA thread has been started from this message.\nIs a crosspost from another channel via Channel Following.\nThis message is a voice message.\nSystem message denoting a interaction premium upsell.\nJoin the the party.\nRequest to join the party.\nThis message is an Interaction Response, and the bot is “…\nListen to or with the party.\nMention of a user in a message.\nAllowed mention type.\nText message sent in a <code>Channel</code>.\nActivity associated with a message.\nActivity of this message.\nPartial <code>Application</code> sent with Rich Presence-related chat …\nFlags to signal state and modify the look of a message.\nAssociated interaction metadata.\nMessage reference struct.\nType of a <code>Message</code>.\nA non-burst/super reaction.\nReaction below a message.\nBreakdown of normal and super reaction counts for the …\nThe kind of reaction.\nSystem message denoting a recipient has been added to a …\nSystem message denoting a recipient has been removed from …\nRegular message.\nMessage is an inline reply.\nInformation about a role subscription that created a …\nSystem message denoting a user subscribed to a role.\nRole mentions.\nSource message for this message has been deleted via …\nDo not include any embeds when serializing this message.\nThis message will not trigger push and desktop …\nSpectate on or with the party.\nSystem message denoting a stage instance has ended.\nSystem message for stage instance speakers.\nSystem message denoting a stage instance has started.\nSystem message denoting the topic for a stage instance.\nComes from the urgent message system.\nStandard Unicode emoji value.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nAn unknown reaction type.\nSystem message denoting a member has joined a guild.\nUser mentions.\nPresent with Rich Presence-related chat embeds.\nGet a flags value with all known bits set.\nPresent with Rich Presence-related chat embeds.\nAssociated application’s ID.\nList of attachments.\nAuthor of the message.\nHash of the user’s avatar, if any.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhether the user is a bot.\nCount of super reactions.\nHEX colors used for super reaction.\nOriginating message’s channel ID.\nID of the <code>Channel</code> the message was sent in.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nInteractive message elements for use with <code>Interaction</code>s.\nList of provided components, such as buttons.\nWhether all set bits in a source flags value are also set …\nContent of the message.\nAmount of reactions this emoji has.\nReaction count details for each type of reaction.\nDefault rich presence invite cover image.\nWhether the message can be deleted, not taking permissions …\nWhether the message can be deleted, taking permissions …\nDescription of the application.\nThe intersection of a source flags value with the …\nCreate a <code>Display</code> formatter for a user discriminator.\nDiscriminator used to differentiate people with the same …\nWhen the message was last edited.\nRich message content.\nList of embeds.\nEmoji of this reaction.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nWhether to error if the referenced message doesn’t exist …\nFlags of the message.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nOriginating message’s guild ID.\nID of the <code>Guild</code> the message was sent in.\nIcon of the application.\nID of the application.\nID of the interaction.\nUnique ID of the user.\nId of the message.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInteraction the message was sent as a response to.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether this notification is for a renewal rather than a …\nYield a set of contained flags values.\nYield a set of contained named flags values.\n<code>MessageActivityType</code>\nType of the interaction.\nType of message.\nWhether the current user has reacted with this emoji.\nWhether the current user super-reacted using this emoji\nIf in a guild, the member who invoked the interaction.\nMember object for the user in the guild, if available.\nMember properties of the <code>author</code>.\n<code>Channel</code>s mentioned in the message.\nWhether the message mentions <code>@everyone</code>.\n<code>Role</code>s mentioned in the message.\nUsers mentioned in the message.\nOriginating message’s ID.\nThe name of the reaction type.\nName of the application.\nName of the <code>Command</code>.\nUsername of the user.\nCount of normal reactions.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nList of allowed mention types.\nID of the player’s party, lobby or group.\nWhether the message is pinned.\nPublic flags on the user’s account.\nList of reactions to the message.\nCrosspost, channel follow add, pin and reply source …\nThe message associated with the <code>reference</code>.\nThe intersection of a source flags value with the …\nFor replies, whether to mention the message author.\nInformation about the role subscription purchase or …\nID of the SKU and listing that the user is subscribed to.\nList of roles to mention.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nMessage stickers.\nStickers within the message.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThread started from this message, includes <code>Channel::member</code>.\nName of the tier that the user is subscribed to.\nTimestamp of when the message was created.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nCumulative number of months that the user has been …\nWhether the message was a TTS message.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUser who invoked the interaction.\nList of users to mention.\nID of the webhook that generated the message.\nWhether the emoji is animated.\nEmoji identifier.\nEmoji name.\nUnicode name identifier.\nNon-interactive <code>Component</code> container of other (non action …\nComponent is an <code>ActionRow</code>.\nTop level, non-interactive container of other (non action …\nClickable <code>Component</code> below messages.\nComponent is an <code>Button</code>.\nClickable item that renders below messages.\nStyle of a <code>Button</code>.\nChannel select menus.\nDefault channel.\nComponent is a <code>SelectMenu</code> for channels.\nInteractive message element.\nType of <code>Component</code>.\nButton indicates a dangerous action.\nButton indicates an action with a link.\nMentionable select menus.\nComponent is a <code>SelectMenu</code> for mentionables.\nIntended for much longer inputs.\nButton indicates a primary action.\nRole select menus.\nDefault role.\nComponent is a <code>SelectMenu</code> for roles.\nButton indicates a secondary action.\nA default value for an auto-populated select menu.\nDropdown-style <code>Component</code> that renders below messages.\nDropdown-style item that renders below messages.\nDropdown options that are part of <code>SelectMenu</code>.\nA <code>SelectMenu</code>’s type.\nIntended for short single-line text.\nButton indicates a successful action.\nSelect menus with a text-based <code>options</code> list.\nPop-up <code>Component</code> that renders on modals.\nComponent is an <code>TextInput</code>.\nPop-up item that renders on modals.\nStyle of an <code>TextInput</code>.\nComponent is a <code>SelectMenu</code> with custom string options.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nUser select menus.\nDefault user.\nComponent is a <code>SelectMenu</code> for users.\nAn optional list of channel types.\nList of components in the action row.\nUser defined identifier for the button.\nDeveloper defined identifier.\nUser defined identifier for the input text.\nWhether the option will be selected by default.\nList of default values for auto-populated select menus.\nAdditional description.\nWhether the button is disabled.\nWhether the select menu is disabled.\nVisual emoji for clients to display with the button.\nEmoji associated with the option. Appears left of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of component that this is.\nThis select menu’s type.\nText appearing on the button.\nUser-facing name.\nText appearing over the input field.\nThe maximum length of the text.\nMaximum number of options that may be chosen.\nThe minimum length of the text.\nMinimum number of options that must be chosen.\nName of the component type.\nA list of available options.\nCustom placeholder text if no option is selected.\nPlaceholder for the text input.\nWhether the user is required to input a text.\nStyle variant of the button.\nStyle variant of the input text.\nURL for buttons of a <code>ButtonStyle::Link</code> style.\nDeveloper defined value.\nPre-filled value for input text.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSticker format is an APNG.\nSticker format is a GIF.\nSticker uploaded to a boosted guild for the guild’s …\nSticker format is a LOTTIE.\nSmallest amount of data required to render a <code>Sticker</code>.\nSticker format is a PNG.\nOfficial sticker in a pack.\nMessage sticker.\nFormat type of a <code>Sticker</code>.\nPack of <code>Standard</code> stickers.\nType of a <code>Sticker</code>.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nWhether the sticker is available.\nID of the sticker pack’s banner image.\nID of the sticker that is shown as the pack’s icon.\nDescription of the sticker pack.\nDescription of the sticker.\nFormat type.\nFormat type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild that owns the sticker.\nID of the sticker.\nID of the sticker pack.\nUnique ID of the sticker.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKind of sticker.\nName of the sticker.\nName of the sticker pack.\nName of the sticker.\nUnique ID of the pack the sticker is in.\nID of the pack’s SKU.\nSticker’s sort order within a pack.\nList of stickers in the pack.\nCSV list of tags the sticker is assigned to, if any.\nID of the user that uploaded the sticker.\nPermission overwrite targets an individual member.\nPermission overwrite data for a role or member.\nType of a permission overwrite target.\nPermission overwrite targets an individual role.\nVariant value is unknown to the library.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe id of the <code>GuildScheduledEvent</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe thread metadata object contains a number of …\nResponse body returned in thread listing methods.\nDuration without messages before the thread automatically …\nWhen the thread was created at.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether there are potentially more threads that could be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA thread member object for each returned thread the …\nRetrieve the length of the duration in minutes, used by …\nList of threads.\nWebhooks used with interactions.\nVariant value is unknown to the library.\nPartial channel object that a webhook is following.\nPartial guild object that a webhook is following.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPartial channel object that a webhook is following.\nPartial guild object that a webhook is following.\nUrl used for executing the webhook.\nAuto moderation configuration intent.\nAuto moderation execution event.\nMultiple identify payloads were sent.\nAn invalid token was sent when identifying.\nGateway close event codes.\nInformation about a close message.\nDirect messages intent.\nDirect message reactions intent.\nDirect message typing intent.\nAn invalid payload was sent.\nA disallowed intent was sent, may need allowlisting.\n<code>DispatchEvent</code> and sequence number.\nGuilds intent.\nGuild emojis and stickers intent.\nGuild integrations intent.\nGuild invites intent.\nGuild members intent.\nGuild messages intent.\nGuild message reactions intent.\nGuild message typing intent.\nGuild moderation intent.\nGuild presences intent.\nGuild scheduled events intent.\nGuild voice states intent.\nGuild webhooks intent.\nPeriodically sent to maintain the gateway connection and …\nReceived in response to sending a <code>Heartbeat</code>.\nReceived after connecting, contains the heartbeat interval.\nStart a new session.\nGateway intents.\nAn invalid version for the gateway was sent.\nAn invalid intent was sent.\nAn invalid sequence was sent for resuming.\nReceived when the session is invalidated.\nAn invalid shard was sent when identifying.\nMessage content intent.\nNormal close code indicating the shard will not be …\nA payload was sent prior to identifying.\n<code>ShardId</code>’s number was greater or equal to its total.\nID of a bot that has only one shard.\nGateway event’s payload type.\nRequest to update the client’s presence.\nClose code indicating the shard will be reconnecting soon.\nToo many payloads were sent in a certain amount of time.\nIndicates that a reconnect is required.\nRequest a list of members for a guild.\nResume a previously disconnected session, skipping over …\nCurrent gateway session utilization status.\nThe session timed out.\nShard identifier to calculate if it receivies a given …\nType of <code>ShardIdParseError</code> that occurred.\nSharding is required because there are too many guilds.\nAn unknown error occurred.\nAn invalid opcode or payload for an opcode was sent.\nRequest to join, leave or move between voice channels.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTrue if this is a super-reaction.\nColors used for super-reaction animation in hex format.\nWhether the close code is one that allows reconnection of …\nReason for the close.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTry to match an integer value to an opcode, returning <code>None</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether the opcode is received by the client.\nWhether the opcode is sent by the client.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nImmutable reference to the type of error that occurred.\nMaximum number of session that may be started concurrently.\nID of the user who authored the message which was reacted …\nConstruct a close frame from a code and a reason why.\nCreate a new shard identifier.\nCreate a new shard identifier if the shard indexes are …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nIdentifying number of the shard, 0-indexed.\nPayloads for sending commands to and receiving events from …\nTextual representation of the reason the connection is …\nNumber of remaining sessions for a given time period.\nThe intersection of a source flags value with the …\nMilliseconds until <code>remaining</code> resets back to <code>total</code>.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTotal number of shards, 1-indexed.\nTotal number of sessions that can be started within the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nValue of number.\nValue of total.\nGateway information containing the recommended shard count …\nGateway information containing the URL to connect to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCurrent session availability and session connection …\nRecommended shard count to use.\nURL to the gateway.\nURL to the gateway.\nMessage was blocked by AutoMod according to a rule.\nSent when an auto moderation rule is created.\nSent when an auto moderation rule is deleted.\nSent when an auto moderation rule is updated.\nA user was banned from a guild.\nA user’s ban from a guild was removed.\nA channel was created.\nA channel was deleted.\nA channel’s pins were updated.\nA channel was updated.\nA command’s permissions were updated.\nA dispatch event, containing information about a created …\nDeserialize into a <code>DispatchEvent</code> by knowing its event name.\nA user subscribes to a SKU.\nA user’s entitlement is removed.\nA user’s subscription renews for the next billing period.\nAny type of event that a shard emits.\nAn error that describes a failure to convert from one …\nThe type of an event.\nClose message with an optional frame including information …\nA heartbeat was sent to or received from the gateway.\nA heartbeat acknowledgement was received from the gateway.\nA “hello” packet was received from the gateway.\nA shard’s session was invalidated.\nThe gateway is indicating to perform a reconnect.\nA audit log entry was created.\nA guild was created.\nA guild was deleted or the current user was removed from a …\nA guild’s emojis were updated.\nA guild’s integrations were updated.\nA guild scheduled event was created.\nA guild scheduled event was deleted.\nA guild scheduled event was updated.\nA user was added to a guild scheduled event.\nA user was removed from a guild scheduled event.\nA guild’s stickers were updated.\nA guild was updated.\nA guild integration was created.\nA guild integration was deleted.\nA guild integration was updated.\nAn interaction was invoked by a user.\nA invite was made.\nA invite was deleted.\nA user was added to a guild.\nA chunk of members were received from the gateway.\nA user was removed from a guild.\nA user’s member object in a guild was updated.\nA message was created in a channel.\nA message was deleted in a channel.\nMultiple messages were deleted in a channel.\nA message was updated in a channel.\nA user’s active presence (such as game or online status) …\nA reaction was added to a message.\nA reaction was removed from a message.\nAll reactions were removed from a message.\nAll instances of a given emoji from the reactions of a …\nA shard is now “ready” and fully connected.\nA shard has successfully resumed.\nA role was created in a guild.\nA role was deleted in a guild.\nA role was updated in a guild.\nA stage instance was created in a stage channel.\nA stage instance was deleted in a stage channel.\nA stage instance was updated in a stage channel.\nA thread has been created, relevant to the current user, …\nA thread, relevant to the current user, has been deleted.\nThe current user has gained access to a thread.\nThe thread member object for the current user has been …\nA user has been added to or removed from a thread.\nA thread has been updated.\nA user started typing in a channel.\nA guild is now unavailable.\nThe current user was updated.\nA voice server update was sent.\nA voice state in a voice channel was updated.\nA webhook was updated.\nReturn an immutable reference to the original event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild ID of the event, if available.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the original event.\nReturns the type of event that this event is.\nCreate a new deserializer.\nAn event from the gateway, which can either be a dispatch …\nDeserialize into a <code>GatewayEvent</code> by knowing its dispatch …\nDispatch event type of the payload.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a gateway event deserializer by scanning the JSON …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a deserializer with an owned event type.\nConsume the deserializer, returning its components.\nCreate a new gateway event deserializer when you already …\nOpcode of the payload.\nSequence of the payload.\nPayloads that are incoming from the Discord Gateway API.\nPayloads that are outgoing to the Discord Gateway API.\nMessage has been blocked by AutoMod according to a rule.\nAuto moderation rule has been created.\nAuto moderation rule has been deleted.\nAuto moderation rule has been updated.\nThe inner value of the <code>GuildAuditLogEntryCreate</code> variant of …\nSent when a guild scheduled event is created. The inner …\nSent when a guild scheduled event is deleted. The inner …\nSent when a guild scheduled event is updated. The inner …\nSent when a user has subscribed to a guild scheduled event.\nSent when a user has unsubscribed from a guild scheduled …\nUser’s presence was updated.\nAction which was executed.\nList of thread members.\nID of any system auto moderation messages posted as a …\nID of the Bot/OAuth2 application for this integration.\nList of attachments.\nMember’s guild avatar.\nID of the channel in which user content was posted.\nUser generated text content.\nContent of the message.\nList of embeds.\nDiscord voice server endpoint.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild in which action was executed.\nGuild ID of the scheduled event.\nGuild ID of the scheduled event.\nID of the guild.\nID of the guild scheduled event.\nID of the guild scheduled event.\nID of the guild.\nID of the integration.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGateway event payload when an invite is created.\nSubstring in content that triggered the rule.\nWord or phrase configured in the rule that triggered the …\nNumber of members in the thread.\nID of any user message which content belongs to.\nWhether the user has yet to pass the guild’s Membership …\nID of the rule which action belongs to.\nType of rule which was triggered.\nVoice authentication token to connect to the Discord voice …\nID of the user which generated the content which triggered …\nID of the user who has subscribed to the guild scheduled …\nID of the user who has subscribed to the guild scheduled …\nA new <code>Invite</code> has been created.\nInformation about the user whose stream to display for a …\nHash of the user’s avatar.\nID of the channel invited users will first see.\nUnique code.\nWhen the invite was created.\nCreate a <code>Display</code> formatter for a user discriminator.\nDiscriminator used to differentiate people with the same …\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild being invited to.\nID of the user.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInformation about the user who created the invite.\nMaximum age before the invite expires.\nMaximum number of uses before the invite expires.\nUser whose stream to display for this voice channel stream …\nTarget of the invite.\nWhether the invite is temporary.\nUsername of the user.\nNumber of times the invite has been used.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of IDs specified.\nSingle ID specified.\nOne or a list of IDs in a request.\nMore than 100 user IDs were provided.\nProvided IDs is invalid for the request.\nType of <code>UserIdsError</code> that occurred.\nCreate a new builder to configure a guild members request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nImmutable reference to the type of error that occurred.\nMaximum number of members to request.\nCreate a new builder to configure and construct a …\nSet the nonce to identify the member chunk response.\nRequest that guild members’ presences are included in …\nConsume the builder, creating a request for users whose …\nConsume the builder, creating a request that requests the …\nConsume the builder, creating a request that requests the …\nProvided list of user IDs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo activities provided.\nError emitted when the payload can not be created as …\nType of <code>UpdatePresenceError</code> that occurred.\nUser’s activities.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nImmutable reference to the type of error that occurred.\nCreate a new, valid <code>UpdatePresence</code> payload.\nCreate a validated stats update info struct.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresentations of activity linked or textual buttons.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nUnix timestamp of when the activity was added to the user…\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nUnix time of when the activity started, in milliseconds.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nID of the inner object.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nCreate a new deserializer for a presence when you know the …\nCreate a new deserializer for a map of presences when you …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nUnix time of when the activity ends, in milliseconds.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nButton used in an activity.\nButton used in an activity with a URL.\nButton used in an activity without a URL.\nActivity button is a link.\nActivity button is textual.\nVariant value is unknown to the library.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the variant is a link button.\nWhether the variant is a text button.\nRetrieve an immutable reference to the label.\nText shown on the button.\nText shown on the button.\nRetrieve an immutable reference to the URL if this is a …\nURL opened when clicking the button.\nDuration of a user being AFK before being timed out from a …\nHas access to set an animated guild banner image.\nHas access to set an animated guild icon.\nHas set up auto moderation rules.\nMember is exempt from guild verification requirements.\nHas access to set a guild banner image.\nMember has completed onboarding.\nAllows for creating private threads.\nAllows for creating public threads.\nCan enable welcome screen, membership screening, stage …\nGuild has enabled monetization.\nGuild has enabled the role subscription promotional page.\nMember has left and rejoined the guild.\nGuild has been set as a support server on the App …\nIntegration is a Discord application.\nIs able to be discovered in the directory.\nAFK timeout of fifteen minutes.\nAFK timeout of five minutes.\nIs able to be featured in the directory.\nSpecial and optional guild features.\nSpecial and optional guild features.\nIntegration is a Guild Subscription.\nA role that is available to select as an option within the …\nBehavior to perform when the user’s integration expires.\nHas access to set an invite splash background.\nInvites have been paused, this prevents new users from …\nKick the user when the integration expires.\nAllows for creating, editing, and deleting scheduled …\nAllows management and editing of emojis, stickers, and …\nAllows for deleting and archiving threads, and viewing all …\nAllows for timing out users to prevent them from sending …\n<code>User</code> that is in a <code>Guild</code>.\nFlags associated with a <code>Member</code>.\nHas enabled membership screening.\nHas increased custom sticker slots.\nHas access to create news channels.\nAFK timeout of one hour.\nAFK timeout of one minute.\nIs partnered.\nCan be previewed before joining via membership screening …\nHas access to create private threads.\nGuild has disabled alerts for join raids in the configured …\nRemove the role when the integration expires.\nThe flags for a role represented as a bitfield.\nIs able to set role icons.\nData used to update the positions of roles.\nGuild has role subscriptions that can be purchased.\nGuild has enabled role subscriptions.\nTags that a <code>Role</code> has.\nAllows for sending messages and creating forum threads, …\nAllows for sending messages in threads.\nAllows sending voice messages\nMember has started onboarding.\nSuppress server setup tips.\nSuppress member join notifications.\nHide member join sticker reply buttons.\nSuppress server boost notifications.\nSuppress role subscription purchase and renewal …\nHide role subscription sticker reply buttons.\nAFK timeout of thirty minutes.\nHas enabled ticketed events.\nIntegration is a Twitch connection.\nAllows for using activities (applications with the <code>EMBEDDED</code>\nAllows user-installed apps to send public responses. When …\nAllows the usage of custom soundboard sounds from other …\nAllows the usage of custom stickers from other servers.\nAllows for using soundboard in a voice channel\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nAllows for viewing role subscription insights.\nInformation about a guild’s vanity URL setting.\nHas access to set a vanity URL.\nIs verified.\nHas access to set 384kps bitrate in voice (previously VIP …\nHas enabled the welcome screen.\nIntegration is a YouTube connection.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nAudit Logs, created whenever an administrative action is …\nTypes for Auto Moderation.\nWhether this role is available for purchase.\nMember’s guild avatar.\nMember’s guild avatar.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nID of the bot the role belongs to.\nCompare two roles to each other using their position and …\nCode of the vanity URL.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nWhether the integration has been enabled.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nEnabled guild features\nFlags for the member.\nFlags for this role.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nRetrieve the duration of the AFK timeout in seconds.\nWhether this role is a guild’s linked role.\nIcon image hash.\nRole identifier.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nID of the integration the role belongs to.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nTypes for guild onboarding.\nWhether the user has yet to pass the guild’s [Membership …\nPermission data for the member.\nSorting position of the role.\nWhether the premium progress bar is enabled in the guild.\nWhether the premium progress bar is enabled in the guild.\nWhether this is the guild’s premium subscriber role.\nID of the where moderators of Community guilds receive …\nID of the where moderators of Community guilds receive …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe ID of the channel where admins and moderators of …\nTypes for interacting with scheduled events.\nAn array of OAuth2 scopes which the application has been …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nGuild’s custom stickers.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nID of the role’s subscription SKU and listing.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTags about the role.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nIcon unicode emoji.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nNumber of times the vanity URL has been used.\nMinimal amount of information about an affected role.\nAFK channel ID was changed.\nAFK voice channel for a guild.\nTimeout to cause a user to be moved to an AFK voice …\nTimeout to cause a user to be moved to an AFK voice …\nAllowed permissions of a permission overwrite target.\nAllowed permissions of a permission overwrite target.\nA <code>GuildCommandPermissions</code> was updated.\nID of an application.\nID of an application.\nThread is now archived/unarchived.\nThread was archived or unarchived.\nAsset of a sticker.\nAsset of a sticker.\nPaginated audit log entries with additional information.\nIndividual change within an <code>AuditLogEntry</code>.\nType of <code>AuditLogChange</code>.\nValue of a change which may be one of multiple types.\nEntry in an <code>AuditLog</code> possibly containing a number of …\nAction to cause an <code>AuditLogEntry</code>.\nInformation about a guild integration provided in an audit …\nAdditional information for certain <code>AuditLogEventType</code>s.\nAuto archive duration of a thread changed.\nAuto archive duration of a thread.\nMessage has been blocked by AutoMod.\nMessage has been flagged by AutoMod.\n<code>AutoModerationRule</code> has been created.\n<code>AutoModerationRule</code> has been deleted.\n<code>AutoModerationRule</code> has been updated.\nA member has been timed out by AutoMod.\nAvailability of a sticker.\nAvailability of a sticker.\nHash of an avatar.\nHash of an avatar.\nHash of a guild banner.\nHash of a guild banner.\nBitrate of an audio channel.\nBitrate of an audio channel.\nBot user was added to a guild.\nChannel was created.\nChannel was deleted.\nChannel for an invite code.\nChannel for an invite code.\nPermission overwrite for a channel was created.\nPermission overwrite for a channel was deleted.\nPermission overwrite for a channel was updated.\nChannel was updated.\nCode of an invite.\nCode of an invite.\nColor of a role.\nColor of a role.\nPermissions for a command were updated\nPermissions for a command were updated.\nMember timeout state changed.\nMember timeout state changed.\nCreator monetization request was created.\nCreator monetization terms were accepted.\nWhether a member is guild deafened.\nWhether a user is guild deafened.\ndefault auto archive duration for newly created threads …\nDefault auto archive duration for new threads.\nDefault message notification level for a guild.\nDefault message notification level for a guild.\nDenied permissions of a permission overwrite target.\nDenied permissions of a permission overwrite target.\nDescription of a guild or sticker.\nDescription of a guild.\nHash of a guild’s discovery splash.\nHash of a guild’s discovery splash.\nEmoji was created.\nEmoji was deleted.\nEmoji was updated.\nWhether emoticons are enabled.\nWhether emoticons are enabled.\nEntity type of guild scheduled event was changed.\nEntity type of guild scheduled event was changed.\nBehavior of the expiration of an integration.\nBehavior of the expiration of an integration.\nGrace period of the expiration of an integration.\nGrace period of the expiration of an integration.\nExplicit content filter level of a guild.\nExplicit content filter level of a guild.\nFormat type of a sticker.\nFormat type of a sticker.\nGuild that a sticker is in.\nGuild that a sticker is in.\n<code>GuildScheduledEvent</code> was created.\n<code>GuildScheduledEvent</code> was deleted.\n<code>GuildScheduledEvent</code> was updated.\nGuild was updated.\nWhether a role is hoisted.\nWhether a role is hoisted.\nHash of a guild icon.\nHash of a guild icon.\nID of an entity.\nID of an entity.\nHash of a guild scheduled event cover.\nHash of a guild scheduled event cover.\nIntegration was created.\nIntegration was deleted.\nIntegration was updated.\nInvitable state of a private thread.\nInvitable state of a private thread.\nInvite was created.\nInvite was deleted.\nInvite was updated.\nID of the user who created an invite.\nID of the user who created an invite.\nLocation for a scheduled event changed.\nChannel ID for a scheduled event changed.\nThread was locked or unlocked.\nThread was locked or unlocked.\nMaximum age of an invite.\nMaximum age of an invite.\nMaximum uses of an invite.\nMaximum uses of an invite.\nMember was banned.\nMember’s ban was removed.\nMember was disconnected from a voice channel.\nMember was kicked.\nMember was moved between voice channels.\nMember prune began.\nMember either had a role attached or removed.\nMember was updated.\nWhether a role can be mentioned in a message.\nWhether a role can be mentioned in a message.\nMultiple messages were deleted.\nMessage was deleted.\nMessage was pinned to a channel.\nMessage was unpinned from a channel.\nMulti-Factor Authentication level required of a guild’s …\nMulti-Factor Authentication level required of a guild’s …\nWhether a user is guild muted.\nWhether a user is guild muted.\nName of an entity such as a channel or role.\nName of an entity such as a channel or role.\nNickname of a member.\nNickname of a member.\nWhether a channel is NSFW.\nWhether a channel is NSFW.\nNSFW level of a guild.\nNSFW level of a guild.\nOther type of change not covered by other variants.\nID of the owner of a guild.\nID of the owner of a guild.\nPermission overwrites on a channel changed.\nPermission overwrites on a channel changed.\nDefault permissions of a role.\nDefault permissions of a role.\nPosition of an entity such as a channel or role.\nPosition of an entity such as a channel or role.\nPreferred locale of a guild.\nPreferred locale of a guild.\nPrivacy level of a stage instance.\nPrivacy level of a stage instance.\nNumber of days’ worth of inactivity for a guild prune.\nNumber of days’ worth of inactivity for a guild prune.\nID of a guild’s public updates channel.\nID of a guild’s public updates channel.\nRatelimit per user in a textual channel.\nRatelimit per user in a textual channel.\nRegion of a guild changed.\nRegion of a guild changed.\nRole was added to a user.\nRole added to a user.\nRole was created.\nRole was deleted.\nRole was removed from a user.\nRole removed from a user.\nRole was updated.\nGuild’s rules channel.\nID of a guild’s rules channel.\nHash of a guild’s splash.\nHash of a guild’s splash.\nStage instance was created.\nStage instance was deleted.\nStage instance was updated.\nStatus of guild scheduled event was changed.\nStatus of guild scheduled event was changed.\nSticker was created.\nSticker was deleted.\nSticker was updated.\nValue is a string.\nID of guild’s system channel.\nID of a guild’s system channel.\nRelated emoji of a sticker.\nRelated emoji of a sticker.\nWhether an invite is temporary.\nWhether an invite is temporary.\nThread channel was created.\nThread channel was deleted.\nThread channel was updated.\nTopic of a textual channel.\nTopic of a textual channel.\nType of a created entity.\nType of a created entity.\nUnicode emoji of a role icon changed.\nRole unicode emoji.\nVariant value is unknown to the library.\nValue is an unsigned integer.\nMaximum number of users in a voice channel.\nMaximum number of users in a voice channel.\nNumber of uses of an invite.\nNumber of uses of an invite.\nCode of a guild’s vanity invite.\nCode of a guild’s vanity invite.\nRequired verification level of new members in a guild.\nRequired verification level of new members in a guild.\nWebhook was created.\nWebhook was deleted.\nWebhook was updated.\nChannel ID of a widget.\nChannel ID of a widget.\nWhether a widget is enabled.\nWhether a widget is enabled.\nAccount of the integration.\nType of event to cause the entry.\nList of referenced application commands.\nName of the Auto Moderation rule that was triggered.\nTrigger type of the Auto Moderation rule that was …\nList of referenced auto moderation rules.\nList of changes included in the entry.\nChannel in which the entities were targeted.\nNumber of entities that were targeted.\nSpecified number of days’ worth of inactivity members …\nWhether the integration is enabled.\nPaginated entries in a guild’s audit log.\nBehavior of expiring subscribers to the integration.\nGrace period before expiring users, in days.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the server where the entry was added.\nInformation about mentioned scheduled events.\nID of the role.\nID of the entire entry.\nID of the integration.\nID of overwritten entity.\nType of integration which performed the action.\nInformation about mentioned integrations.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey of an audit log change.\nType of integration.\nType of overwritten entity.\nNumber of members removed from a change.\nID of the affected message.\nRaw name of the key.\nName of the role.\nName of the integration.\nOptional information about the entry.\nOptional application- or user-attached reason for the …\nID that the integration uses for subscribers.\nName of a role.\nWhen the integration was last synced.\nWhether the integration is syncing.\nID of the target entity.\nInformation about mentioned threads.\nUser for the integration.\nID of the user that performed the action.\nInformation about mentioned users.\nInformation about mentioned webhooks.\nNew ID of the AFK channel.\nNew timeout, in seconds.\nNew allowed permissions value.\nApplication’s ID.\nWhether the thread is archived.\nEmpty string.\nNew auto archive duration.\nNew availability.\nNew hash of an avatar.\nNew hash of a guild’s banner.\nNew bitrate.\nNew invite’s channel.\nNew invite’s code.\nNew role color.\nNew command permissions.\nNew timeout timestamp.\nWhether a member is now guild deafened.\nNew auto archive duration.\nNew default message notification level.\nNew denied permissions level.\nNew guild description.\nNew discovery splash hash.\nWhether emoticons are now enabled.\nNew entity type.\nNew expiration behavior.\nNew expiration grace period.\nNew explicit content filter level.\nNew format type of a sticker.\nNew guild that a sticker is in.\nWhether a role is now hoisted.\nNew hash of a guild’s icon.\nNew entity’s ID.\nNew hash of a guild’s icon.\nNew threads invitable state.\nUser ID.\nWhether the thread is now locked.\nNew maximum age.\nNew maximum uses.\nWhether a role is now mentionable.\nNew MFA level of a guild.\nWhether a member is now muted.\nNew entity name.\nNew member nickname.\nNew state.\nNew NSFW level.\nNew owner’s ID.\nNew set of overwrites.\nNew set of permissions.\nNew position value.\nNew preferred locale.\nNew privacy level.\nNumber of days.\nNew public updates channel ID.\nNew ratelimit, in seconds.\nNew region.\nNew rules channel.\nOld hash of a guild’s splash.\nNew status.\nNew system channel ID.\nNew related emoji of a sticker.\nNew temporary state.\nNew topic.\nNew target type.\nNew unicode emoji.\nNew limit.\nNumber of uses.\nNew vanity URL code.\nNew verification level.\nNew channel ID.\nNew state of a widget being enabled.\nMinimal information about a added role.\nMinimal information about a removed role.\nOld ID of the AFK channel.\nOld timeout, in seconds.\nOld allowed permissions value.\nPrevious state, if any.\nPrevious state, if any.\nOld auto archive duration.\nOld availability.\nOld hash of an avatar.\nOld hash of a guild’s banner.\nOld bitrate.\nOld invite’s channel.\nPrevious state, if any.\nOld role color.\nOld command permissions.\nOld timeout timestamp.\nPrevious state, if any.\nOld auto archive duration.\nOld default message notification level.\nPrevious state, if any.\nOld guild description.\nOld discovery splash hash.\nWhether emoticons were enabled.\nPrevious state, if any.\nPrevious state, if any.\nPrevious state, if any.\nOld explicit content filter level.\nOld format type of a sticker.\nOld guild that a sticker is in.\nWhether a role was hoisted.\nOld hash of a guild’s icon.\nOld hash of a guild’s icon.\nOld threads invitable state.\nPrevious state, if any.\nPrevious state, if any.\nPrevious state, if any.\nWhether a role was mentionable.\nOld MFA level of a guild.\nWhether a member was muted.\nOld entity name.\nOld member nickname.\nPrevious state, if any.\nOld NSFW level.\nOld owner’s ID.\nOld set of overwrites.\nOld set of permissions.\nOld position value.\nOld preferred locale.\nOld privacy level.\nOld public updates channel ID.\nOld ratelimit, in seconds.\nPrevious state, if any.\nOld rules channel.\nNew hash of a guild’s splash.\nPrevious state, if any.\nOld system channel ID.\nOld related emoji of a sticker.\nPrevious state, if any.\nOld topic.\nOld target type.\nOld target type.\nOld limit.\nPrevious state, if any.\nOld vanity URL code.\nOld verification level.\nOld channel ID.\nOld state of a widget being enabled.\nPrevious state, if any.\nPrevious state, if any.\nAn action which will execute whenever a rule is triggered.\nAdditional metadata needed during execution for a specific …\nType of <code>AutoModerationAction</code>.\nIndicates in what event context a rule should be checked.\nInternally pre-defined wordsets which will be searched for …\nConfigured auto moderation rule.\nAdditional data used to determine whether a rule should be …\nCharacterizes the type of content which can trigger the …\nPrevents a member from using text, voice, or other …\nBlocks the content of a message according to the rule.\nCheck if content contains words from a user defined list …\nCheck if content contains words from internal pre-defined …\nCheck if member profile contains words from a user defined …\nWhen a member edits their profile.\nCheck if content contains more unique mentions than …\nWhen a member sends or edits a message in a guild.\nWords that may be considered forms of swearing or cursing.\nLogs user content to a specified channel.\nWords that refer to sexually explicit behavior or activity.\nPersonal insults or words that may be considered hate …\nCheck if content represents generic spam.\nTimeout user for a specified duration.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nActions which will execute when the rule is triggered.\nSubstrings that will be exempt from triggering the preset …\nChannel to which user content should be logged.\nUser which created the rule.\nAdditional explanation that will be shown to members …\nTimeout duration in seconds.\nWhether the rule is enabled.\nRule event type.\nChannels that should not be affected by the rule.\nRoles that should not be affected by the rule.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild the rule belongs to.\nID of the rule.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubstrings which will be searched for in content.\nType of action.\nWhether to automatically detect mention raids.\nTotal number of unique role and user mentions allowed per …\nAdditional metadata needed during execution for this …\nName of the rule.\nInternally pre-defined wordsets which will be searched for …\nRegular expression patterns which will be matched against …\nRule trigger metadata.\nRule trigger type.\nHash of the banner image.\nID of the channel.\nDescription used for guild discovery.\nGuild description.\nDescription of the channel.\nID of the emoji if the emoji is custom.\nEmoji’s name if it is custom, or the unicode character.\nList of features that the guild has had enabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHash of the icon image.\nID of the channel.\nID of the guild.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of the channel.\nName of the channel.\nName of the guild.\nNumber of boosts the guild has.\nHash of the splash image.\nVanity code unique to the guild for invites.\nAccount verification level required to participate.\nChannels shown in the welcome screen.\nWelcome screen for a Community guild.\nA prompt that allows the user to use a dropdown to select …\nA prompt that allows the user to select multiple options.\nThe onboarding data for a guild.\nCounts Default Channels and Questions towards constraint.\nCounts only Default Channels towards constraints\nDefines the criteria used to satisfy Onboarding …\nA prompt in the onboarding flow.\nAn emoji for a guild onboarding prompt. This is used …\nA prompt option for a guild onboarding screen.\nThe type of an onboarding prompt.\nVariant is unknown to the library.\nAn unknown prompt type.\nChannels opted into when this option is selected.\nChannel IDs that new members get opted into automatically\nDescription of the option.\nEmoji of the option.\nWhether the guild has enabled onboarding.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild this onboarding is a part of.\nID of the option.\nID of the prompt.\nWhether this prompt is in the onboarding flow.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>OnboardingPromptType</code> of the prompt.\nCurrent mode of onboarding.\nName of the onboarding mode.\nArray of <code>OnboardingPromptOption</code>s available to the prompt.\nArray of <code>OnboardingPrompt</code>s for the guild onboarding flow.\nWhether this prompt is required in the onboarding flow.\nRoles assigned when this option is selected.\nWhether this prompt allows selecting only one option.\nTitle of the option.\nTitle of the prompt.\nEvent is active.\nEvent is cancelled.\nEvent is complete.\nMetadata associated with an event.\nType of event.\nEvent takes place outside of Discord.\nEvent is only accessible to guild members.\nRepresentation of a scheduled event.\nContainer for user and member data returned by Discord.\nPrivacy level of an event.\nEvent is scheduled.\nEvent takes place in a stage instance.\nStatus of an event.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nVariant value is unknown to the library.\nEvent takes place in a voice channel.\nID of the stage or voice channel if there is one.\nUser object of the event’s creator.\nID of the event’s creator.\nDescription of the event.\nID of the event’s entity.\nMetadata of an entity, if it exists.\nType of entity associated with the event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild the event takes place in.\nID of the scheduled event.\nID of the event.\nHash of the event’s cover image, if it has one.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPhysical location of an event with type …\nMember object of the user, if requested.\nName of the event.\nPrivacy level of the event.\nScheduled end time of the event.\nScheduled start time of the event.\nStatus of the event.\nUser object.\nNumber of users subscribed to the event.\nUser object of who created this template.\nID of the user who created this template.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the template has unsynced changes.\nTags about the role.\nCreate a <code>Display</code> formatter for a user discriminator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMember’s ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModels used when sending attachments to Discord.\nModels used when setting the channel positions over HTTP.\nModels used when responding to interactions over HTTP.\nModels for sending permission overwrites to Discord.\nAttachments used in messages.\nSet the description of the attachment.\nDescription of the attachment, useful for screen readers …\nContent of the file.\nName of the file.\nReturns the argument unchanged.\nCreate an attachment from a filename and bytes.\nUnique ID of the attachment in the message.\nCalls <code>U::from(self)</code>.\nUsed to update the position of channels over HTTP.\nReturns the argument unchanged.\nChannel id\nCalls <code>U::from(self)</code>.\nsyncs the permission overwrites with the new parent, if …\nThe new parent ID for the channel that is moved\nSorting position of the channel\nRespond to an autocomplete interaction with suggested …\nResponds to an interaction with a message.\nAcknowledges an interaction, showing a loading state, and …\nAcknowledges a component interaction, allowing for the …\nInteraction response sent to Discord.\nData included in an interaction response.\nType of interaction response.\nRespond to an interaction with a popup modal.\nUsed when responding to a Ping from Discord.\nRespond to an interaction with an upgrade button, only …\nAcknowledges a component interaction and edits the message.\nAllowed mentions of the response.\nList of attachments on the response.\nList of autocomplete alternatives.\nList of components on the response.\nContent of the response.\nFor <code>InteractionResponseType::Modal</code>, user defined …\nData of the response.\nEmbeds of the response.\nInteraction response data flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of the response.\nFor <code>InteractionResponseType::Modal</code>, title of the modal.\nWhether the response is TTS.\nPermission overwrite targets an individual member.\nPermission overwrite data for a role or member.\nType of a permission overwrite target.\nPermission overwrite targets an individual role.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nID of a resource, such as the ID of a channel or user.\nCast an ID from one type to another.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the inner primitive value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the <code>NonZeroU64</code> representation of the ID.\nMarkers for various resource types, such as channels or …\nCreate a new ID, panicking if the value is zero.\nCreate an ID if the provided value is not zero.\nCreate an ID without checking if the value is non-zero.\nMarker for application IDs.\nMarker for attachment IDs.\nMarker for audit log entry IDs.\nMarker for auto moderation rule IDs.\nSKU ID marker for avatar decoration data.\nMarker for channel IDs.\nMarker for command IDs.\nMarker for command versions.\nMarker for emoji IDs.\nMarker for entitlement IDs.\nMarker for generic IDs.\nMarker for guild IDs.\nMarker for integration IDs.\nMarker for interaction IDs.\nMarker for message IDs.\nMarker for OAuth SKU IDs.\nMarker for OAuth team IDs.\nMarker for onboarding prompt IDs.\nMarker for onboarding prompt option IDs.\nMarker for role IDs.\nMarker for SKU IDs.\nMarker for scheduled event entity IDs.\nMarker for scheduled event IDs.\nMarker for entitlement SKU IDs.\nMarker for stage IDs.\nMarker for sticker banner asset IDs.\nMarker for sticker IDs.\nMarker for sticker pack IDs.\nMarker for sticker pack SKU IDs.\nMarker for forum tag IDs.\nMarker for user IDs.\nMarker for webhook IDs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates whether an app has registered global application …\nInformation about the current OAuth2 authorization.\nIndicates if an app is embedded within the Discord client.\nIntent required for bots in 100 guilds or more to receive …\nIntent required for bots in less than 100 guilds to receive\nIntent required for bots in 100 guilds or more to receive …\nIntent required for bots in less than 100 guilds to receive\nIntent required for bots in 100 guilds or more to receive …\nIntent required for bots in less than 100 guilds to receive\nParameters for in-app authorization links.\nIndicates unusual growth of an app that prevents …\nGet a flags value with all known bits set.\nCurrent application.\nApproximate count of guilds this app has been added to.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nPartial user object for the bot user associated with the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nDefault rich presence invite cover image.\nApplication’s default custom authorization link, if …\nDescription of the application.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nWhen the access token expires.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nPublic flags of the application.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nPartial object of the associated guild.\nIcon of the application.\nID of the application.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSettings for the application’s default in-app …\nInteractions endpoint URL for the app.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nName of the application.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nPermissions to request for the bot role.\nURL of the application’s privacy policy.\nRedirect URIs for the application.\nThe intersection of a source flags value with the …\nRole connection verification URL for the app.\nKnown list of available OAuth2 scopes.\nList of scopes the <code>user</code> has authorized the <code>application</code> for.\nList of scopes to add the application to the guild with.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTags describing the content and functionality of the …\nURL of the application’s terms of service.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUser who has authorized, if the user has authorized with …\nAllows your app to fetch data from a user’s “Now …\nAllows your app to update a user’s activity\nAllows your app to read build data for a user’s …\nAllows your app to upload/update builds for a user’s …\nAllows your app to use commands in a guild.\nAllows your app to update permissions for its commands in …\nAllows your app to update its commands using a Bearer …\nAllows your app to read entitlements for a user’s …\nAllows your app to read and update store data (SKUs, store …\nFor oauth2 bots, this puts the bot in the user’s …\nAllows /users/@me/connections to return linked third-party …\nAllows your app to see information about the user’s DMs …\nEnables <code>GET /users/@me</code> returning an email.\nAllows your app to join users to a group DM.\nAllows <code>GET /users/@me/guilds</code> to return basic information …\nAllows <code>GET /guilds/{guild.id}/members/{user.id}</code> to be used …\nAllows <code>GET /users/@me/guilds/{guild.id}/member</code> to return a …\nAllows <code>GET /users/@me</code>, but without the user’s email.\nFor local RPC server API access, this allows you to read …\nAllows your app to know a user’s friends and implicit …\nAllows your app to update a user’s connection and …\nFor local RPC server access, this allows you to control a …\nFor local rpc server access, this allows you to update a …\nFor local RPC server access, this allows you to receive …\nFor local RPC server access, this allows you to read a user…\nFor local RPC server access, this allows you to update a …\nAllows your app to connect to voice on the user’s behalf …\nThis generates a webhook that is returned in the oauth …\nVariant value is unknown to the library.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUser is an Active Developer.\nThe data for the user’s avatar decoration.\nBot uses only HTTP interactions and is shown in the online …\nBug hunter level 1.\nBug hunter level 2.\nInformation about a guild the current user is in.\nDisplay formatter for a user discriminator.\nHypeSquad events member.\nHouse Bravery member.\nHouse Brilliance member.\nHouse Balance member.\nModerator Programs Alumni\nUser has the standard Nitro.\nUser has Nitro Basic.\nUser has Nitro Classic.\nUser doesn’t have premium.\nPartnered server owner.\nEarly Nitro supporter.\nType of premium tier for a <code>User</code>.\nDiscord Employee.\nUser is in a team.\nVariant value is unknown to the library.\nVerified bot.\nEarly verified bot developer.\nAccent color of the user’s banner.\nAccent color of the user’s banner.\nGet a flags value with all known bits set.\nThe avatar decoration hash.\nUser’s avatar hash.\nHash of the user’s avatar decoration.\nData for the user’s avatar decoration.\nHash of the user’s banner image.\nHash of the user’s banner image.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhether the user belongs to an OAuth2 application.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nCreate a <code>Display</code> formatter for a user discriminator that …\nCreate a <code>Display</code> formatter for a user discriminator that …\nDiscriminator used to differentiate people with the same …\nDiscriminator used to differentiate people with the same …\nUser’s email address associated to the account.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nList of enabled guild features.\nAll flags on a user’s account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nRetrieve the inner discriminator value.\nUser’s global display name, if set. For bots, this is …\nHash of the icon.\nUser’s id.\nUnique ID.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nUser’s chosen language option.\nWhether the user has two factor enabled on their account.\nUser’s username, not unique across the platform.\nName of the guild.\nCreate a new display formatter for a discriminator.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether the current user is the owner.\nPermissions of the current user in the guild. This …\nType of Nitro subscription on a user’s account.\nPublic flags on a user’s account.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nID of the avatar decoration’s SKU.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhether this connection has a corresponding third party …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether the email on this account has been verified.\nUtilities for parsing and formatting ISO 8601 timestamps.\nEfficient parsing and storage of Discord image hashes.\nFormat of the input datetime is invalid.\nTimestamp parsing failed.\nValue of a field is not in an acceptable range.\nRepresentation of a Unix timestamp.\nDisplay implementation to format a <code>Timestamp</code> in an ISO …\nReason that an ISO 8601 format couldn’t be parsed.\nType of <code>TimestampParseError</code> that occurred.\nTotal number of microseconds within the timestamp.\nTotal number of seconds within the timestamp.\nParse a timestamp from an ISO 8601 datetime string emitted …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a timestamp from a Unix timestamp with microseconds …\nCreate a timestamp from a Unix timestamp with seconds …\nParse a timestamp from an ISO 8601 datetime string emitted …\nGet the inner timestamp.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nCreate a Display implementation to format the timestamp as …\nImmutable reference to the type of error that occurred.\nParse a timestamp from an ISO 8601 datetime string emitted …\nParse a timestamp from an ISO 8601 datetime string emitted …\nWhether to format the timestamp with microseconds.\nRepresents a color in the RGB format using hexadecimal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAvatar hash of Clyde AI, which has a non-standard hash.\nInput is either animated and not 34 characters long or is …\nEfficient storage for Discord image hashes.\nParsing an image hash into an efficient storage format via …\nType of <code>ImageHashParseError</code> that occurred.\nIterator over the nibbles of an image hash.\nInput is out of the accepted range (‘0’ to ‘9’, ‘…\nEfficient packed bytes of the hash.\nParse an image hash string into an efficient decimal store.\nFormat the image hash as a hex string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse an image hash string into an efficient decimal store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nWhether the hash is for an animated image.\nImmutable reference to the type of error that occurred.\nInstantiate a new hash from its raw parts.\nCreate an iterator over the nibbles of the hexadecimal …\nParse an image hash into an efficient integer-based …\nParse an image hash string into an efficient decimal store.\nParse an image hash string into an efficient decimal store.\nIndex of the byte.\nByte of the value out of the acceptable range.\nMultiple identify payloads were sent.\nAn invalid token was sent when identifying.\nReceived to indicate someone was disconnected.\nVoice gateway close event codes.\nAn invalid payload was sent.\nDisconnected from the voice channel.\nFired periodically to keep connection alive.\nReceived in response to a heartbeat.\nReceived after connecting, contains heartbeat interval.\nStart a voice websocket connection.\nA payload was sent prior to identifying.\nVoice gateway opcodes.\nReceived to indicate completion of handshake.\nResume a previously disconnected session.\nReceived to indicate a successful resume.\nSelect the protocol to use.\nThe specified voice server was not found.\nReceived to indicate session description.\nThe session was invalidated.\nThe session timed out.\nSent and received to indicate speaking status.\nThe encryption could not be recognized.\nAn invalid opcode was sent.\nAn unknown protocol was sent.\nGeographically based collection of voice servers.\nThe voice server crashed.\nUser’s voice connection status.\nChannel this user is connected to.\nWhether this is a custom voice region, used for e.g. …\nWhether this user is server deafened.\nWhether this is a deprecated voice region (avoid switching …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild this voice state is for.\nUnique region identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMember this voice state is for.\nWhether this user is server muted.\nName of the region.\nWhether this is the closest region to the current user’s …\nWhen the user requested to speak.\nWhether this user is locally deafened.\nWhether this user is locally muted.\nWhether this user is streaming using “Go Live”.\nWhether this user’s camera is enabled.\nSession ID for this voice state.\nWhether the user’s permission to speak is denied.\nUser this voice state is for.")