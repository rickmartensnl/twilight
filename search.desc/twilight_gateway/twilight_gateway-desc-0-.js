searchState.loadedDescShard("twilight_gateway", 0, "twilight-gateway\nDiscord Gateway API version used by this crate.\nMessage has been blocked by AutoMod according to a rule.\nAll <code>EventTypeFlags</code> in …\nAuto moderation configuration intent.\nAll <code>EventTypeFlags</code> in <code>Intents::AUTO_MODERATION_EXECUTION</code>.\nAuto moderation execution event.\n<code>AutoModerationRule</code> has been created.\n<code>AutoModerationRule</code> has been deleted.\n<code>AutoModerationRule</code> has been updated.\nShard is connected to the gateway with an active session.\nUser has been banned from a guild.\nUser has been unbanned from a guild.\nChannel has been created.\nChannel has been deleted.\nChannel’s pins have been updated.\nChannel has been updated.\nA command’s permissions has been updated.\nClose message with an optional frame including information …\nInformation about a close message.\nTrait marker denoting what can be provided to …\nRatelimiter for sending commands over the gateway to …\nConfiguration used by the shard to identify with the …\nBuilder to customize the operation of a shard.\nAll <code>EventTypeFlags</code> in <code>Intents::DIRECT_MESSAGES</code>.\nDirect messages intent.\nDirect message polls intent.\nAll <code>EventTypeFlags</code> in <code>Intents::DIRECT_MESSAGE_REACTIONS</code>.\nDirect message reactions intent.\nAll <code>EventTypeFlags</code> in <code>Intents::DIRECT_MESSAGE_TYPING</code>.\nDirect message typing intent.\nShard is disconnected from the gateway but may reconnect …\nAn entitlement has been created.\nAn entitlement has been deleted.\nAn entitlement has been updated.\nImportant optimization for narrowing requested event types.\nShard has fatally closed.\nHeartbeat has been created.\nHeartbeat has been acknowledged.\nA “hello” packet has been received from the gateway.\nShard’s session has been invalidated.\nGateway is indicating that a shard should perform a …\nAll <code>EventTypeFlags</code> in <code>Intents::GUILDS</code>.\nGuilds intent.\nAn audit log entry has been created.\nA guild has been created.\nA guild has been deleted or the current user has been …\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_EMOJIS_AND_STICKERS</code>.\nGuild emojis and stickers intent.\nA guild’s emojis have been updated.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_INTEGRATIONS</code>.\nGuild integrations intent.\nA guild’s integrations have been updated.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_INVITES</code>.\nGuild invites intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_MEMBERS</code>.\nGuild members intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_MESSAGES</code>.\nGuild messages intent.\nGuild polls intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_MESSAGE_REACTIONS</code>.\nGuild message reactions intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_MESSAGE_TYPING</code>.\nGuild message typing intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_MODERATION</code>.\nGuild moderation intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_PRESENCES</code>.\nGuild presences intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_SCHEDULED_EVENTS</code>.\nGuild scheduled events intent.\nA guild’s integrations have been updated.\nA guild’s integrations have been updated.\nA guild’s integrations have been updated.\nA guild’s integrations have been updated.\nA guild’s integrations have been updated.\nA guild’s stickers have been updated.\nA guild has been updated.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_VOICE_STATES</code>.\nGuild voice states intent.\nAll <code>EventTypeFlags</code> in <code>Intents::GUILD_WEBHOOKS</code>.\nGuild webhooks intent.\nA guild integration was created.\nA guild integration was deleted.\nA guild integration was updated.\nAn interaction was invoked by a user.\nInvite for a channel has been created.\nInvite for a channel has been deleted.\nShard is waiting to establish or resume a session.\nGateway event decompressor.\nGateway intents.\n<code>Shard</code>’s gateway connection latency.\nMember has been added to a guild.\nGroup of members from a guild.\nMember has been removed from a guild.\nMember in a guild has been updated.\nMessage content intent.\nMessage created in a channel.\nMessage deleted in a channel.\nMultiple messages have been deleted in a channel.\nAll <code>EventTypeFlags</code> in <code>Intents::DIRECT_MESSAGE_POLLS</code> and …\nMessage poll vote has been added.\nMessage poll vote has been removed.\nMessage in a channel has been updated.\nMessage to send over the connection to the remote.\nChannel to send messages over a <code>Shard</code> to the Discord …\nNormal close code indicating the shard will not be …\nID of a bot that has only one shard.\nUser’s presence details are updated.\nReaction has been added to a message.\nReaction has been removed from a message.\nAll of the reactions for a message have been removed.\nAll of a given emoji’s reactions for a message have been …\nSession is initialized.\nClose code indicating the shard will be reconnecting soon.\nSession is resumed.\nRole has been created in a guild.\nRole has been deleted in a guild.\nRole has been updated in a guild.\nShard is replaying missed dispatch events.\nStage instance was created in a stage channel.\nStage instance was deleted in a stage channel.\nStage instance was updated in a stage channel.\nGateway session information for a shard’s active …\nGateway API client responsible for up to 2500 guilds.\nShard identifier to calculate if it receivies a given …\nCurrent state of a Shard.\nAn extension trait for the <code>Stream</code> trait.\nA thread has been created, relevant to the current user, …\nA thread, relevant to the current user, has been deleted.\nThe current user has gained access to a thread.\nA user has been added to or removed from a thread.\nThe thread member object for the current user has been …\nA thread has been updated.\nUser has begun typing in a channel.\nText websocket message.\nGuild is unavailable, potentially due to an outage.\nCurrent user’s profile has been updated.\nVoice server has provided an update with voice session …\nUser’s state in a voice channel has been updated.\nWebhook in a guild has been updated.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nNumber of available permits.\nAverage latency.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nConsume the builder, constructing a shard.\nSend a Websocket close frame to the associated shard.\nQueue a websocket close frame.\nReason for the close.\nSend a command to the associated shard.\nQueue a command to be sent to the gateway.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nImmutable reference to the configuration used to …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCreate a single bucket’s worth of shards.\nCreate a iterator of shards.\nCreate a range of shards from Discord’s recommendation.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nErrors returned by gateway operations.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nID of the session being resumed.\nID of the shard.\nImmutable reference to the identification properties the …\nSet the properties to identify with.\nZlib decompressor statistics.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nIntents that the shard requests when identifying with the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether the message is a close message.\nWhether the channel is closed.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether the shard is identified with an active session.\nWhether the message is a text message.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nMaximum threshold at which point the gateway will stop …\nSet the maximum number of members in a guild to load the …\nShard latency statistics, including average latency and …\nMaximum number of available permits.\nCreate a new default shard configuration.\nCreate a new builder to configure and construct a shard.\nCreate new configuration for resuming a gateway session.\nCreate a new shard with the default configuration.\nConstruct a close frame from a code and a reason why.\nCreate a new shard identifier.\nCreate a new shard identifier if the shard indexes are …\nDuration until the next permit is available.\nConsumes and returns the next wanted <code>Event</code> in the stream …\nConsumes and returns the next wanted <code>Event</code> in the stream …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nIdentifying number of the shard, 0-indexed.\nParse a JSON encoded gateway event into a <code>GatewayEvent</code> if …\nNumber of recorded heartbeat periods.\nImmutable reference to the presence to set when identifying\nSet the presence to use automatically when starting a new …\nTotal number of bytes processed.\nTotal number of bytes produced.\nImmutable reference to the gateway proxy URL.\nSet the proxy URL for connecting to the gateway.\nImmutable reference to the queue in use by the shard.\nSet the queue to use for queueing shard sessions.\nWhether outgoing message ratelimiting is enabled.\nSet whether or not outgoing messages will be ratelimited.\nStatistics about the number of available commands and when …\nTextual representation of the reason the connection is …\nWhen the last heartbeat received an acknowledgement.\nMost recent latencies from newest to oldest.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSet the resume URL to use when the initial shard …\nImmutable reference to the gateways current resume URL.\nSend a JSON encoded gateway event to the associated shard.\nQueue a JSON encoded gateway event to be sent to the …\nRetrieve a channel to send messages over the shard to the …\nWhen the last heartbeat was sent.\nCurrent sequence of the connection.\nSet the gateway session to use when connecting to the …\nImmutable reference to the active gateway session.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nState of the shard.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nImmutable reference to the token used to authenticate when …\nTotal number of shards, 1-indexed.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCreate a new shard with the provided configuration.\nNumber of reconnection attempts that have been made.\nSending a command over a channel failed.\nType of <code>ChannelError</code> that occurred.\nTried sending over a closed channel.\nBinary message could not be decompressed.\nAn operation relating to compression failed.\nType of <code>CompressionError</code> that occurred.\nDecompressing a frame failed.\nReceived gateway event failed to be deserialized.\nGateway event could not be deserialized.\nDecompressed message is not UTF-8.\nReceiving the next Websocket message failed.\nType of <code>ReceiveMessageError</code> that occurred.\nShard failed to reconnect to the gateway.\nRequesting recommended shards from Discord’s REST API …\nFailure when fetching the recommended number of shards to …\nType of <code>StartRecommendedError</code> that occurred.\nWebSocket connection error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the owned error type and the …\nConsume the error, returning the owned error type and the …\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nConsume the error, returning the source error if there is …\nConsume the error, returning the source error if there is …\nConsume the error, returning the source error if there is …\nImmutable reference to the type of error that occurred.\nImmutable reference to the type of error that occurred.\nImmutable reference to the type of error that occurred.\nImmutable reference to the type of error that occurred.\nGateway event.")