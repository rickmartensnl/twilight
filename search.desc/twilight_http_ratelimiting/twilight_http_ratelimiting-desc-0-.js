searchState.loadedDescShard("twilight_http_ratelimiting", 0, "twilight-http-ratelimiting\nA bucket containing ratelimiting information for a <code>Path</code>.\nA generic error type that implements <code>Error</code>.\nFuture returned by <code>Ratelimiter::bucket</code>.\nFuture returned by <code>Ratelimiter::ticket</code>.\nFuture returned by <code>Ratelimiter::has</code>.\nFuture returned by <code>Ratelimiter::is_globally_locked</code>.\nAn implementation of a ratelimiter for the Discord REST …\nFuture returned by <code>Ratelimiter::wait_for_ticket</code>.\nRetrieve the basic information of the bucket for a given …\nReturns the argument unchanged.\nDetermine if the ratelimiter has a bucket for the given …\nParse typed headers from a response.\nIn-memory based default <code>Ratelimiter</code> implementation used in …\nCalls <code>U::from(self)</code>.\nWhether the ratelimiter is currently globally locked.\nTotal number of tickets allotted in a cycle.\nCreate a representation of a ratelimiter bucket.\nNumber of tickets remaining.\nRequest parameters for ratelimiting.\nDuration after the <code>Self::started_at</code> time the bucket will …\nWhen the bucket’s ratelimit refresh countdown started.\nFlow for managing ratelimit tickets.\nRetrieve a ticket to know when to send a request. The …\nHow long until the bucket will refresh.\nRetrieve a ticket to send a request. Other than …\nLowercased name for the bucket header.\nType of header value is a bool.\nInformation about the ratelimit bucket.\nType of header value is a float.\nLowercased name for the global header.\nRatelimit for all buckets encountered.\nGlobal header.\nRatelimit is global, affecting the application as a whole.\nGlobal ratelimit encountered.\nTyped name of a header.\nIterator of header name-value pairs failed to be parsed.\nType of <code>HeaderParsingError</code> that occurred.\nExpected type of a header value.\nType of header value is an integer.\nLowercased name for the limit header.\nMaximum requests allotted in the bucket.\nExpected header is missing.\nNo ratelimit headers present.\nHeader value is not UTF-8 valid.\nHeader value is not of the expected type.\nRatelimit for some bucket present.\nBucketed ratelimit present.\nLowercased name for the remaining header.\nLowercased name for the reset header.\nLowercased name for the reset-after header.\nLowercased name for the retry-after header.\nParsed headers.\nScope of a ratelimit.\nRemaining requested allotted.\nWhen the bucket resets.\nHow long until the bucket is reset.\nHow long until a request can be tried again.\nLowercased name for the scope header.\nScope of a ratelimit.\nRatelimit is shared, affecting all users of the resource.\nType of header value is a string.\nRatelimit is per-resource, such as for an individual …\nReference to the bucket ID.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse headers from an iterator of tuples containing the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the ratelimit headers, returning the owned bucket …\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nWhether the ratelimit headers are global.\nWhether there are no ratelimit headers.\nWhether the ratelimit headers are for a bucket.\nImmutable reference to the type of error that occurred.\nTotal number of tickets allocated to the bucket.\nLowercased name of the header.\nRemaining number of tickets.\nWhen the bucket resets, as a Unix timestamp in …\nNumber of milliseconds until the bucket resets.\nNumber of seconds to wait before retrying.\nScope of the ratelimit.\nScope of the ratelimit.\nType of header value expected.\nName of the header that should be present in the list.\nName of the header.\nName of the header.\nValue of the header.\nValue of the header.\nDefault ratelimiter implementation used in twilight that …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new in-memory ratelimiter.\nOperating on global commands.\nOperating on a specific command.\nOperating on commands in a guild.\nOperating on a specific command in a guild.\nOperating on an application’s entitlements.\nOperating on an application’s SKUs.\nOperating on current user application,\nOperating on a channel.\nOperating on a channel’s followers.\nOperating on a channel’s invites.\nOperating on a channel’s messages.\nOperating on a channel’s messages by bulk deleting.\nOperating on an individual channel’s message.\nCrossposting an individual channel’s message.\nOperating on an individual channel’s message’s …\nOperating on an individual channel’s message’s …\nOperating on an individual channel’s message’s threads.\nOperating on a channel’s permission overwrites by ID.\nOperating on a channel’s pins.\nOperating on a channel’s individual pinned message.\nOperating on a channel’s polls.\nOperating on a group DM’s recipients.\nOperating on a thread’s members.\nOperating on a thread’s member.\nOperating on a channel’s threads.\nOperating on a channel’s typing indicator.\nOperating on a channel’s webhooks.\nDelete a resource.\nOperating with the gateway information.\nOperating with the gateway information tailored to the …\nRetrieve a resource.\nOperating on the guild resource.\nOperating on one of user’s guilds.\nOperating on a ban from one of the user’s guilds.\nOperating on a guild’s auto moderation rules.\nOperating on an auto moderation rule from  one of the user…\nOperating on one of the user’s guilds’ bans.\nOperating on a ban from one of the user’s guilds.\nOperating on specific member’s ban from one of the user…\nOperating on one of the user’s guilds’ channels.\nOperating on one of the user’s guilds’ emojis.\nOperating on an emoji from one of the user’s guilds.\nOperating on one of the user’s guilds’ integrations.\nOperating on an integration from one of the user’s …\nOperating on an integration from one of the user’s …\nOperating on one of the user’s guilds’ invites.\nOperating on one of the user’s guilds’ members.\nOperating on a member from one of the user’s guilds.\nOperating on a role of a member from one of the user’s …\nOperating on the user’s nickname in one of the user’s …\nOperating on one of the user’s guilds’ members by …\nOperating on one of the user’s guilds’ MFA level.\nOperating on one of the user’s guilds’ onboarding.\nOperating on one of the user’s guilds’ by previewing …\nOperating on one of the user’s guilds’ by pruning …\nOperating on the voice regions of one of the user’s …\nOperating on the roles of one of the user’s guilds.\nOperating on a role of one of the user’s guilds.\nOperating on the guild’s scheduled events.\nOperating on a particular guild’s scheduled events.\nOperating on a particular guild’s scheduled event users.\nOperating on one of the user’s guilds’ stickers.\nOperating on one of the user’s guilds’ templates.\nOperating on a template from one of the user’s guilds.\nOperating on one of the user’s guilds’ threads.\nOperating on one of the user’s guilds’ vanity URL.\nOperating on one of the user’s guilds’ voice states.\nOperating on one of the user’s guilds’ webhooks.\nOperating on one of the user’s guilds’ welcome screen.\nOperating on one of the user’s guild’s widget settings.\nOperating on one of the user’s guild’s widget.\nOperating on a guild template.\nThe ID couldn’t be parsed as an integer.\nOperating on an interaction’s callback.\nOperating on an invite.\nWhen parsing into a <code>Path::ChannelsIdMessagesId</code> variant, …\nHTTP request method.\nA static path for the provided path string wasn’t found.\nOperating on the user’s application information.\nOperating on the current authorization’s information.\nUpdate a resource.\nAn enum representing a path, most useful for ratelimiting …\nError returned when a <code>Path</code> could not be parsed from a …\nType of <code>PathParseError</code> specifying what failed to parse.\nCreate a resource.\nReplace a resource.\nOperating on stage instances.\nOperating on sticker packs.\nOperating on a sticker.\nOperating on a sticker.\nOperating on the user’s private channels.\nOperating on the user’s connections.\nOperating on the state of a guild that the user is in.\nOperating on the state of a guild that the user is in.\nOperating on the state of a guild that the user, as a …\nOperating on the voice regions available to the current …\nOperating on a webhook as a bot.\nOperating on a webhook as a webhook.\nOperating on a message created by a webhook.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParses a string into a path.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, returning the owned error type and the …\nConsume the error, returning the source error if there is …\nImmutable reference to the type of error that occurred.\nName of the method.\nThe ID of the channel.\nReceiver to wait for the headers sent by the API consumer.\nIndicate to the ratelimit consumer that their ticket has …\nChannel receiver to wait for availability of a ratelimit …\nChannel sender to send response ratelimit information to …\nSignal to the ratelimiter consumer (an HTTP client) that a …\nProduce a new channel consisting of a sender and receiver.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSend the response’s ratelimit headers to the ratelimiter.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")