(function() {var type_impls = {
"twilight_cache_inmemory":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-InMemoryCache%3CCacheModels%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#192\">source</a><a href=\"#impl-Debug-for-InMemoryCache%3CCacheModels%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheModels: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html\" title=\"trait twilight_cache_inmemory::traits::CacheableModels\">CacheableModels</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"twilight_cache_inmemory/struct.InMemoryCache.html\" title=\"struct twilight_cache_inmemory::InMemoryCache\">InMemoryCache</a>&lt;CacheModels&gt;<div class=\"where\">where\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Channel\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Channel\">Channel</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.CurrentUser\" title=\"type twilight_cache_inmemory::traits::CacheableModels::CurrentUser\">CurrentUser</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Emoji\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Emoji\">Emoji</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Guild\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Guild\">Guild</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.GuildIntegration\" title=\"type twilight_cache_inmemory::traits::CacheableModels::GuildIntegration\">GuildIntegration</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Member\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Member\">Member</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Message\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Message\">Message</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Presence\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Presence\">Presence</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Role\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Role\">Role</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.StageInstance\" title=\"type twilight_cache_inmemory::traits::CacheableModels::StageInstance\">StageInstance</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Sticker\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Sticker\">Sticker</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.User\" title=\"type twilight_cache_inmemory::traits::CacheableModels::User\">User</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.VoiceState\" title=\"type twilight_cache_inmemory::traits::CacheableModels::VoiceState\">VoiceState</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#192\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","twilight_cache_inmemory::DefaultInMemoryCache"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-InMemoryCache%3CCacheModels%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#798-830\">source</a><a href=\"#impl-Default-for-InMemoryCache%3CCacheModels%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheModels: <a class=\"trait\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html\" title=\"trait twilight_cache_inmemory::traits::CacheableModels\">CacheableModels</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"twilight_cache_inmemory/struct.InMemoryCache.html\" title=\"struct twilight_cache_inmemory::InMemoryCache\">InMemoryCache</a>&lt;CacheModels&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#799-829\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","twilight_cache_inmemory::DefaultInMemoryCache"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InMemoryCache%3CCacheModels%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#256-794\">source</a><a href=\"#impl-InMemoryCache%3CCacheModels%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;CacheModels: <a class=\"trait\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html\" title=\"trait twilight_cache_inmemory::traits::CacheableModels\">CacheableModels</a>&gt; <a class=\"struct\" href=\"twilight_cache_inmemory/struct.InMemoryCache.html\" title=\"struct twilight_cache_inmemory::InMemoryCache\">InMemoryCache</a>&lt;CacheModels&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#271-273\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new, empty cache.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Creating a new <code>InMemoryCache</code> with a custom configuration, limiting\nthe message cache to 50 messages per channel:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>twilight_cache_inmemory::DefaultInMemoryCache;\n\n<span class=\"kw\">let </span>cache = DefaultInMemoryCache::builder()\n    .message_cache_size(<span class=\"number\">50</span>)\n    .build();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.builder\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#277-279\">source</a><h4 class=\"code-header\">pub const fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.builder\" class=\"fn\">builder</a>() -&gt; <a class=\"struct\" href=\"twilight_cache_inmemory/struct.InMemoryCacheBuilder.html\" title=\"struct twilight_cache_inmemory::InMemoryCacheBuilder\">InMemoryCacheBuilder</a>&lt;CacheModels&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new builder to configure and construct an in-memory cache.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#285-313\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Clear the state of the Cache.</p>\n<p>This is equal to creating a new empty cache.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.config\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#316-318\">source</a><h4 class=\"code-header\">pub const fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.config\" class=\"fn\">config</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Config.html\" title=\"struct twilight_cache_inmemory::Config\">Config</a></h4></section></summary><div class=\"docblock\"><p>Returns a copy of the config cache.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#341-343\">source</a><h4 class=\"code-header\">pub const fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"twilight_cache_inmemory/iter/struct.InMemoryCacheIter.html\" title=\"struct twilight_cache_inmemory::iter::InMemoryCacheIter\">InMemoryCacheIter</a>&lt;'_, CacheModels&gt;</h4></section></summary><div class=\"docblock\"><p>Create an interface for iterating over the various resources in the\ncache.</p>\n<p>Via the iterator interface many resource types can be iterated over\nincluding, but not limited to, emojis, guilds, presences, and users.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Iterate over every guild in the cache and print their IDs and names:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>twilight_cache_inmemory::DefaultInMemoryCache;\n\n<span class=\"kw\">let </span>cache = DefaultInMemoryCache::new();\n\n<span class=\"comment\">// later in the application...\n</span><span class=\"kw\">for </span>guild <span class=\"kw\">in </span>cache.iter().guilds() {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"{}: {}\"</span>, guild.id(), guild.name());\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stats\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#361-363\">source</a><h4 class=\"code-header\">pub const fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.stats\" class=\"fn\">stats</a>(&amp;self) -&gt; <a class=\"struct\" href=\"twilight_cache_inmemory/struct.InMemoryCacheStats.html\" title=\"struct twilight_cache_inmemory::InMemoryCacheStats\">InMemoryCacheStats</a>&lt;'_, CacheModels&gt;</h4></section></summary><div class=\"docblock\"><p>Create an interface for retrieving statistics about the cache.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Print the number of guilds in a cache:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>twilight_cache_inmemory::DefaultInMemoryCache;\n\n<span class=\"kw\">let </span>cache = DefaultInMemoryCache::new();\n\n<span class=\"comment\">// later on...\n</span><span class=\"kw\">let </span>guilds = cache.stats().guilds();\n<span class=\"macro\">println!</span>(<span class=\"string\">\"guild count: {guilds}\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.permissions\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#396-398\">source</a><h4 class=\"code-header\">pub const fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.permissions\" class=\"fn\">permissions</a>(&amp;self) -&gt; <a class=\"struct\" href=\"twilight_cache_inmemory/permission/struct.InMemoryCachePermissions.html\" title=\"struct twilight_cache_inmemory::permission::InMemoryCachePermissions\">InMemoryCachePermissions</a>&lt;'_, CacheModels&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>permission-calculator</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Create an interface for retrieving the permissions of a member in a\nguild or channel.</p>\n<p><a href=\"twilight_cache_inmemory/struct.ResourceType.html\" title=\"struct twilight_cache_inmemory::ResourceType\"><code>ResourceType</code></a>s must be configured for the permission interface to\nproperly work; refer to the <a href=\"twilight_cache_inmemory/permission/index.html\" title=\"mod twilight_cache_inmemory::permission\"><code>permission</code></a> module-level documentation\nfor more information.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Calculate the permissions of a member in a guild channel:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>twilight_cache_inmemory::{DefaultInMemoryCache, ResourceType};\n<span class=\"kw\">use </span>twilight_model::id::Id;\n\n<span class=\"kw\">let </span>resource_types = ResourceType::CHANNEL | ResourceType::MEMBER | ResourceType::ROLE;\n\n<span class=\"kw\">let </span>cache = DefaultInMemoryCache::builder()\n    .resource_types(resource_types)\n    .build();\n\n<span class=\"kw\">let </span>channel_id = Id::new(<span class=\"number\">4</span>);\n<span class=\"kw\">let </span>user_id = Id::new(<span class=\"number\">5</span>);\n\n<span class=\"kw\">let </span>permissions = cache.permissions().in_channel(user_id, channel_id)<span class=\"question-mark\">?</span>;\n<span class=\"macro\">println!</span>(<span class=\"string\">\"member has these permissions: {permissions:?}\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#401-403\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.update\" class=\"fn\">update</a>(&amp;self, value: &amp;impl <a class=\"trait\" href=\"twilight_cache_inmemory/trait.UpdateCache.html\" title=\"trait twilight_cache_inmemory::UpdateCache\">UpdateCache</a>&lt;CacheModels&gt;)</h4></section></summary><div class=\"docblock\"><p>Update the cache with an event from the gateway.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_user\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#407-412\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.current_user\" class=\"fn\">current_user</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.CurrentUser\" title=\"type twilight_cache_inmemory::traits::CacheableModels::CurrentUser\">CurrentUser</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the current user.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channel\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#415-420\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.channel\" class=\"fn\">channel</a>(\n    &amp;self,\n    channel_id: Id&lt;ChannelMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;ChannelMarker&gt;, CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Channel\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Channel\">Channel</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a channel by ID.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.channel_messages\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#428-433\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.channel_messages\" class=\"fn\">channel_messages</a>(\n    &amp;self,\n    channel_id: Id&lt;ChannelMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;ChannelMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/collections/vec_deque/struct.VecDeque.html\" title=\"struct alloc::collections::vec_deque::VecDeque\">VecDeque</a>&lt;Id&lt;MessageMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of messages in a channel.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::DIRECT_MESSAGES\"><code>DIRECT_MESSAGES</code></a> or <a href=\"::twilight_model::gateway::Intents::GUILD_MESSAGES\"><code>GUILD_MESSAGES</code></a> intents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.emoji\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#440-445\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.emoji\" class=\"fn\">emoji</a>(\n    &amp;self,\n    emoji_id: Id&lt;EmojiMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;EmojiMarker&gt;, <a class=\"struct\" href=\"twilight_cache_inmemory/struct.GuildResource.html\" title=\"struct twilight_cache_inmemory::GuildResource\">GuildResource</a>&lt;CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Emoji\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Emoji\">Emoji</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets an emoji by ID.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILD_EMOJIS_AND_STICKERS\"><code>GUILD_EMOJIS_AND_STICKERS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#452-457\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild\" class=\"fn\">guild</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Guild\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Guild\">Guild</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a guild by ID.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_channels\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#464-469\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_channels\" class=\"fn\">guild_channels</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;ChannelMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of channels in a guild.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_emojis\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#478-483\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_emojis\" class=\"fn\">guild_emojis</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;EmojiMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of emojis in a guild.</p>\n<p>This requires both the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and <a href=\"::twilight_model::gateway::Intents::GUILD_EMOJIS_AND_STICKERS\"><code>GUILD_EMOJIS_AND_STICKERS</code></a>\nintents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_integrations\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#491-496\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_integrations\" class=\"fn\">guild_integrations</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;IntegrationMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of integrations in a guild.</p>\n<p>This requires the <a href=\"twilight_model::gateway::Intents::GUILD_INTEGRATIONS\"><code>GUILD_INTEGRATIONS</code></a> intent. The\n<a href=\"twilight_cache_inmemory/struct.ResourceType.html#associatedconstant.INTEGRATION\" title=\"associated constant twilight_cache_inmemory::ResourceType::INTEGRATION\"><code>ResourceType::INTEGRATION</code></a> resource type must be enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_members\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#505-510\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_members\" class=\"fn\">guild_members</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;UserMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of members in a guild.</p>\n<p>This list may be incomplete if not all members have been cached.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILD_MEMBERS\"><code>GUILD_MEMBERS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_presences\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#519-524\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_presences\" class=\"fn\">guild_presences</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;UserMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of presences in a guild.</p>\n<p>This list may be incomplete if not all members have been cached.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILD_PRESENCES\"><code>GUILD_PRESENCES</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_roles\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#531-536\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_roles\" class=\"fn\">guild_roles</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;RoleMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of roles in a guild.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_stage_instances\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#543-550\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_stage_instances\" class=\"fn\">guild_stage_instances</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;StageMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of stage instances in a guild.</p>\n<p>This requires the <a href=\"twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_stickers\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#561-566\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_stickers\" class=\"fn\">guild_stickers</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;StickerMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of the stickers in a guild.</p>\n<p>This is an O(m) operation, where m is the amount of stickers in the\nguild. This requires the <a href=\"twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and <a href=\"::twilight_model::gateway::Intents::GUILD_EMOJIS_AND_STICKERS\"><code>GUILD_EMOJIS_AND_STICKERS</code></a>\nintents and the <a href=\"twilight_cache_inmemory/struct.ResourceType.html#associatedconstant.STICKER\" title=\"associated constant twilight_cache_inmemory::ResourceType::STICKER\"><code>STICKER</code></a> resource type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guild_voice_states\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#574-579\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.guild_voice_states\" class=\"fn\">guild_voice_states</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;GuildMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;UserMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the set of voice states in a guild.</p>\n<p>This requires both the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and <a href=\"::twilight_model::gateway::Intents::GUILD_VOICE_STATES\"><code>GUILD_VOICE_STATES</code></a> intents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integration\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#588-602\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.integration\" class=\"fn\">integration</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n    integration_id: Id&lt;IntegrationMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, (Id&lt;GuildMarker&gt;, Id&lt;IntegrationMarker&gt;), <a class=\"struct\" href=\"twilight_cache_inmemory/struct.GuildResource.html\" title=\"struct twilight_cache_inmemory::GuildResource\">GuildResource</a>&lt;CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.GuildIntegration\" title=\"type twilight_cache_inmemory::traits::CacheableModels::GuildIntegration\">GuildIntegration</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets an integration by guild ID and integration ID.</p>\n<p>This requires the <a href=\"twilight_model::gateway::Intents::GUILD_INTEGRATIONS\"><code>GUILD_INTEGRATIONS</code></a> intent. The\n<a href=\"twilight_cache_inmemory/struct.ResourceType.html#associatedconstant.INTEGRATION\" title=\"associated constant twilight_cache_inmemory::ResourceType::INTEGRATION\"><code>ResourceType::INTEGRATION</code></a> resource type must be enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.member\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#610-616\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.member\" class=\"fn\">member</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n    user_id: Id&lt;UserMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, (Id&lt;GuildMarker&gt;, Id&lt;UserMarker&gt;), CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Member\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Member\">Member</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a member by guild ID and user ID.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILD_MEMBERS\"><code>GUILD_MEMBERS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.message\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#625-630\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.message\" class=\"fn\">message</a>(\n    &amp;self,\n    message_id: Id&lt;MessageMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;MessageMarker&gt;, CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Message\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Message\">Message</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a message by ID.</p>\n<p>This requires one or both of the <a href=\"::twilight_model::gateway::Intents::GUILD_MESSAGES\"><code>GUILD_MESSAGES</code></a> or\n<a href=\"::twilight_model::gateway::Intents::DIRECT_MESSAGES\"><code>DIRECT_MESSAGES</code></a> intents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.presence\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#638-644\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.presence\" class=\"fn\">presence</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n    user_id: Id&lt;UserMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, (Id&lt;GuildMarker&gt;, Id&lt;UserMarker&gt;), CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Presence\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Presence\">Presence</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a presence by, optionally, guild ID, and user ID.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILD_PRESENCES\"><code>GUILD_PRESENCES</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.role\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#651-656\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.role\" class=\"fn\">role</a>(\n    &amp;self,\n    role_id: Id&lt;RoleMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;RoleMarker&gt;, <a class=\"struct\" href=\"twilight_cache_inmemory/struct.GuildResource.html\" title=\"struct twilight_cache_inmemory::GuildResource\">GuildResource</a>&lt;CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Role\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Role\">Role</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a role by ID.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stage_instance\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#663-668\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.stage_instance\" class=\"fn\">stage_instance</a>(\n    &amp;self,\n    stage_id: Id&lt;StageMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;StageMarker&gt;, <a class=\"struct\" href=\"twilight_cache_inmemory/struct.GuildResource.html\" title=\"struct twilight_cache_inmemory::GuildResource\">GuildResource</a>&lt;CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.StageInstance\" title=\"type twilight_cache_inmemory::traits::CacheableModels::StageInstance\">StageInstance</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a stage instance by ID.</p>\n<p>This requires the <a href=\"twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sticker\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#678-683\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.sticker\" class=\"fn\">sticker</a>(\n    &amp;self,\n    sticker_id: Id&lt;StickerMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;StickerMarker&gt;, <a class=\"struct\" href=\"twilight_cache_inmemory/struct.GuildResource.html\" title=\"struct twilight_cache_inmemory::GuildResource\">GuildResource</a>&lt;CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.Sticker\" title=\"type twilight_cache_inmemory::traits::CacheableModels::Sticker\">Sticker</a>&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a sticker by ID.</p>\n<p>This is the O(1) operation. This requires the <a href=\"twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and the\n<a href=\"::twilight_model::gateway::Intents::GUILD_EMOJIS_AND_STICKERS\"><code>GUILD_EMOJIS_AND_STICKERS</code></a> intents and the <a href=\"twilight_cache_inmemory/struct.ResourceType.html#associatedconstant.STICKER\" title=\"associated constant twilight_cache_inmemory::ResourceType::STICKER\"><code>STICKER</code></a> resource type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.user\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#690-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.user\" class=\"fn\">user</a>(\n    &amp;self,\n    user_id: Id&lt;UserMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;UserMarker&gt;, CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.User\" title=\"type twilight_cache_inmemory::traits::CacheableModels::User\">User</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a user by ID.</p>\n<p>This requires the <a href=\"::twilight_model::gateway::Intents::GUILD_MEMBERS\"><code>GUILD_MEMBERS</code></a> intent.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.user_guilds\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#708-713\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.user_guilds\" class=\"fn\">user_guilds</a>(\n    &amp;self,\n    user_id: Id&lt;UserMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, Id&lt;UserMarker&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;Id&lt;GuildMarker&gt;&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the guilds a user is in by ID.</p>\n<p>Users are cached from a range of events such as <a href=\"twilight_model::gateway::payload::incoming::InteractionCreate\"><code>InteractionCreate</code></a>\nand <a href=\"twilight_model::gateway::payload::incoming::MemberAdd\"><code>MemberAdd</code></a>, so although no specific intent is required to cache\nusers the intents required for different events are required.</p>\n<p>Requires the <a href=\"twilight_cache_inmemory/struct.ResourceType.html#associatedconstant.USER\" title=\"associated constant twilight_cache_inmemory::ResourceType::USER\"><code>USER</code></a> resource type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.voice_channel_states\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#721-732\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.voice_channel_states\" class=\"fn\">voice_channel_states</a>(\n    &amp;self,\n    channel_id: Id&lt;ChannelMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.VoiceChannelStates.html\" title=\"struct twilight_cache_inmemory::VoiceChannelStates\">VoiceChannelStates</a>&lt;'_, CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.VoiceState\" title=\"type twilight_cache_inmemory::traits::CacheableModels::VoiceState\">VoiceState</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the voice states within a voice channel.</p>\n<p>This requires both the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and <a href=\"::twilight_model::gateway::Intents::GUILD_VOICE_STATES\"><code>GUILD_VOICE_STATES</code></a> intents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.voice_state\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#741-749\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.voice_state\" class=\"fn\">voice_state</a>(\n    &amp;self,\n    user_id: Id&lt;UserMarker&gt;,\n    guild_id: Id&lt;GuildMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"twilight_cache_inmemory/struct.Reference.html\" title=\"struct twilight_cache_inmemory::Reference\">Reference</a>&lt;'_, (Id&lt;GuildMarker&gt;, Id&lt;UserMarker&gt;), CacheModels::<a class=\"associatedtype\" href=\"twilight_cache_inmemory/traits/trait.CacheableModels.html#associatedtype.VoiceState\" title=\"type twilight_cache_inmemory::traits::CacheableModels::VoiceState\">VoiceState</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a voice state by user ID and Guild ID.</p>\n<p>This requires both the <a href=\"::twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and <a href=\"::twilight_model::gateway::Intents::GUILD_VOICE_STATES\"><code>GUILD_VOICE_STATES</code></a> intents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.member_highest_role\" class=\"method\"><a class=\"src rightside\" href=\"src/twilight_cache_inmemory/lib.rs.html#757-780\">source</a><h4 class=\"code-header\">pub fn <a href=\"twilight_cache_inmemory/struct.InMemoryCache.html#tymethod.member_highest_role\" class=\"fn\">member_highest_role</a>(\n    &amp;self,\n    guild_id: Id&lt;GuildMarker&gt;,\n    user_id: Id&lt;UserMarker&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Id&lt;RoleMarker&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the highest role of a member.</p>\n<p>This requires both the <a href=\"twilight_model::gateway::Intents::GUILDS\"><code>GUILDS</code></a> and <a href=\"twilight_model::gateway::Intents::GUILD_MEMBERS\"><code>GUILD_MEMBERS</code></a> intents.</p>\n</div></details></div></details>",0,"twilight_cache_inmemory::DefaultInMemoryCache"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()